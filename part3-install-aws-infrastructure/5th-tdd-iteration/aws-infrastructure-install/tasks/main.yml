---
# tasks file for aws-infrastructure-install

- name: Create a VPC with dedicated tenancy and a couple of tags
  ec2_vpc_net:
    name: "{{ aws_infrastructure_install_vpc.name }}"
    cidr_block: "{{ aws_infrastructure_install_vpc.cidr }}"
    dns_support: true
    dns_hostnames: true
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    tags:
      module: "{{ aws_infrastructure_install_vpc.label }}"
    tenancy: default
  register: ec2_vpc_net

- name: Set the VPC Fact
  set_fact:
    vpc_facts: "{{ ec2_vpc_net.vpc }}"

- name:  Add the subnets
  include_tasks: create-vpc-subnets.yml

- name: create ec2 vpc internet gateway
  # create an internet gateway for the vpc
  ec2_vpc_igw:
    vpc_id: "{{ vpc_facts.id }}"
    state: present
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    tags:
      Name: "{{ aws_infrastructure_install_vpc.gateway }}"
  register: igw

# create routing to/from internet
- name: Route Table to/from Gateway
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_facts.id }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    subnets:
      - "{{ vpc_control_subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id  }}"
    tags:
      Name: "{{ aws_infrastructure_install_vpc.route_table }}"

- name: create the aws security group for the vpc
  ec2_group:
    name: "{{ aws_infrastructure_install_vpc.security_group }}"
    description: The security group for the AWS cluster
    vpc_id: "{{ vpc_facts.id }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    rules:
      - proto: tcp
        ports:
          - 80
          - 443
          - 22
        cidr_ip: 0.0.0.0/0
    tags:
      Name: "{{ aws_infrastructure_install_vpc.security_group }}"
  register: security_group