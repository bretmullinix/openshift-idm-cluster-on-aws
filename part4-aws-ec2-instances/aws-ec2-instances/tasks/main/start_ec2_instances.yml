- name: Initialize list of EC2 instances Ids
  set_fact:
    ec2_instance_ids: "{{ [] }}"

- name: Get list of EC2 Instances
  include: "{{ role_path }}/tasks/main/get_ec2_instance_id.yml current_ec2_instance={{ item.name }}"
  with_items: "{{ ec2_instances }}"
  when: item.action == 'start'

- name: Start EC2 Instances
  ec2:
    instance_ids: "{{ ec2_instance_ids }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    state: running
    wait: yes
  when: ec2_instance_ids | length > 0
  register: started_ec2_facts

- name: Create a folder to hold the ec2 facts
  file:
    path: "{{ role_path }}/files/ec2_facts"
    state: directory
    mode: '0755'
  delegate_to: localhost

- name: Initialize EC2 list of dictionaries
  set_fact:
    ec2_results: []


- name: Populate the EC2 list of dictionaries
  set_fact:
    ec2_results: "{{ ec2_results +
                 ['name:  ' + item.tags.Name  ]
                 + [ 'public_ip:  ' + item.public_ip  ]
                 + [ 'private_ip:  ' + item.private_ip  ]
                 + [ 'key_pair:  ' + item.key_name ]
                 + [ 'ssh connection: ssh -i ' + role_path  + '/files/private_keys/'
                 + item.key_name
                 + ' centos@' + item.public_ip ]
                 + ['\n']
                 }}"
  with_items: "{{ started_ec2_facts.instances }}"

- name: Output the EC2 Facts
  copy:
    content: "{{ ec2_facts }}"
    dest: "{{ role_path}}/files/ec2_facts/{{ lookup('pipe','date +%m-%d-%Y-%H-%M-%S') }}_facts_for_started"
  delegate_to: localhost

- name: Output the EC2 Inventory Information
  copy:
    content: "{{ ec2_results | join('\n') }}"
    dest: "{{ role_path}}/files/ec2_facts/{{ lookup('pipe','date +%m-%d-%Y-%H-%M-%S') }}_inventory_for_started"
  delegate_to: localhost
  when: ec2_results and ec2_results | length > 0